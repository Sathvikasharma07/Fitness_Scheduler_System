{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.apiUrl = 'http://localhost:3000/api/auth'; // Adjust the URL as needed\n\n      this.token = null;\n      this.isLoggedInSubject = new BehaviorSubject(this.hasToken());\n    }\n\n    login(credentials) {\n      return this.http.post(`${this.apiUrl}/login`, credentials).pipe(catchError(this.handleError)).subscribe(response => {\n        this.token = response.token;\n        localStorage.setItem('token', this.token);\n        this.isLoggedInSubject.next(true);\n        this.router.navigate(['/']);\n      });\n    }\n\n    logout() {\n      this.token = null;\n      localStorage.removeItem('token');\n      this.isLoggedInSubject.next(false);\n      this.router.navigate(['/login']);\n    }\n\n    isLoggedIn() {\n      return this.isLoggedInSubject.asObservable();\n    }\n\n    hasToken() {\n      this.token = localStorage.getItem('token');\n      return !!this.token;\n    }\n\n    handleError(error) {\n      console.error('An error occurred', error);\n      throw error;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}